!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(t="undefined"!=typeof globalThis?globalThis:t||self).treetools=i()}(this,(function(){"use strict";var t,i,n;!function(t){t.BFS="BFS",t.DFS="DFS"}(t||(t={})),function(t){t.Front="Front",t.Back="Back"}(i||(i={})),function(t){t.Single="Single",t.Multiple="Multiple"}(n||(n={}));const e={id:"id",pid:"pid",children:"children"};return class{constructor(t){this.config=Object.assign(Object.assign({},e),t)}static create(t){return new this(t)}traversalBFS(t,i){const n=[...t];for(;n.length;){let t=n.shift();i(t);const e=t[this.config.children];if(e)for(let t=0;t<e.length;t++){const i=e[t];n.push(i)}}}traversalDFS(t,i){const n=[...t];for(;n.length;){let t=n.shift();i(t);const e=t[this.config.children];if(e)for(let t=0;t<e.length;t++){const i=e[t];n.unshift(i)}}}format(t){const i=new Map,n=[];t.forEach((t=>{i.set(t[this.config.id],t)}));for(let e=0;e<t.length;e++){const s=t[e];s[this.config.pid]&&i.has(s[this.config.pid])?(!i.get(s[this.config.pid]).children&&(i.get(s[this.config.pid]).children=[]),i.get(s[this.config.pid]).children.push(s)):n.push(s)}return n}flat(i,n){const e=[],s=t=>e.push(t);return(null==n?void 0:n.type)===t.DFS?this.traversalDFS(i,s):this.traversalBFS(i,s),e}find(t,i){const n=[];return this.traversalDFS(t,(t=>i(t)&&n.push(t))),n}insert(t,n,e,s){const o=this.flat(t).map((t=>Object.assign(Object.assign({},t),{[this.config.children]:[]}))),c=o.findIndex((t=>t[this.config.id]===n[this.config.id]));return~c&&o.splice((null==s?void 0:s.order)===i.Front?c:c+1,0,Object.assign(Object.assign({},e),{[this.config.pid]:n[this.config.pid]})),this.format(o)}remove(t,i){const n=this.flat(t).map((t=>Object.assign(Object.assign({},t),{[this.config.children]:[]}))).filter((t=>!i(t)));return this.format(n)}map(t,i){return this.traversalDFS(t,i),t}}}));
//# sourceMappingURL=index.js.map
